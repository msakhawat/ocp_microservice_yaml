apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
  namespace: webproject
  labels:
    app: webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  minReadySeconds: 10
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      name: webapp
      namespace: webproject
      labels:
        app: webapp
    spec:
      containers:
      - name: webapp
        image: image-registry.openshift-image-registry.svc:5000/webproject/webapp:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        resources:
          requests:
            memory: 50Mi
            cpu: 200m
          limits:
            memory: 80Mi
            cpu: 500m
        env:
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: db-credential
              key: username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credential
              key: password
        - name: DATABASE_INSTANCE_NAME
          valueFrom:
            configMapKeyRef:
              name: database-configmap
              key: database_instance
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: database-configmap
              key: database
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: kafka-configmap
              key: kafka_brokers
        - name: KAFKA_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: kafka-configmap
              key: kafka_client_id
        - name: KAFKA_TOPIC
          valueFrom:
            configMapKeyRef:
              name: kafka-configmap
              key: kafka_topic
      restartPolicy: Always


